name: tvos build scripts

on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - main

jobs:
  build-main-on-macos-bigsur:
    name: tvos main on big sur
    runs-on: macos-11
    strategy:
      matrix:
        xcode: [ '12.5.1', '13.2.1' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./tvos.sh --xcframework --enable-tvos-bzip2 --enable-tvos-audiotoolbox --enable-tvos-libiconv --enable-tvos-videotoolbox --enable-tvos-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
  build-main-on-macos-catalina:
    name: tvos main on catalina
    runs-on: macos-10.15
    strategy:
      matrix:
        xcode: [ '11.7', '12.4' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./tvos.sh --xcframework --enable-tvos-bzip2 --enable-tvos-audiotoolbox --enable-tvos-libiconv --enable-tvos-videotoolbox --enable-tvos-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
  build-lts-on-macos:
    name: tvos lts
    runs-on: macos-10.15
    strategy:
      matrix:
        xcode: [ '10.3', '11.7' ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: set up xcode
        run: echo "export DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer" > ~/.xcode.for.ffmpeg.kit.sh
      - name: run the build script
        run: ./tvos.sh --lts --enable-tvos-bzip2 --enable-tvos-audiotoolbox --enable-tvos-libiconv --enable-tvos-zlib
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
